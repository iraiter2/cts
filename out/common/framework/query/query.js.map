{"version":3,"sources":["../../../../src/common/framework/query/query.ts"],"names":["assert","encodeURIComponentSelectively","kBigSeparator","kPathSeparator","kWildcard","kParamSeparator","stringifyPublicParams","TestQueryMultiFile","constructor","suite","file","filePathParts","toString","toStringHelper","join","TestQueryMultiTest","test","length","testPathParts","TestQueryMultiCase","params","paramsParts","TestQuerySingleCase"],"mappings":"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","sourcesContent":["import { CaseParams } from '../params_utils.js';\nimport { assert } from '../util/util.js';\n\nimport { encodeURIComponentSelectively } from './encode_selectively.js';\nimport { kBigSeparator, kPathSeparator, kWildcard, kParamSeparator } from './separators.js';\nimport { stringifyPublicParams } from './stringify_params.js';\n\n/**\n * Represents a test query of some level.\n *\n * TestQuery types are immutable.\n */\nexport type TestQuery =\n  | TestQuerySingleCase\n  | TestQueryMultiCase\n  | TestQueryMultiTest\n  | TestQueryMultiFile;\n\nexport type TestQueryLevel =\n  | 1 // MultiFile\n  | 2 // MultiTest\n  | 3 // MultiCase\n  | 4; // SingleCase\n\n/**\n * A multi-file test query, like `s:*` or `s:a,b,*`.\n *\n * Immutable (makes copies of constructor args).\n */\nexport class TestQueryMultiFile {\n  readonly level: TestQueryLevel = 1;\n  readonly isMultiFile: boolean = true;\n  readonly suite: string;\n  readonly filePathParts: readonly string[];\n\n  constructor(suite: string, file: readonly string[]) {\n    this.suite = suite;\n    this.filePathParts = [...file];\n  }\n\n  toString(): string {\n    return encodeURIComponentSelectively(this.toStringHelper().join(kBigSeparator));\n  }\n\n  protected toStringHelper(): string[] {\n    return [this.suite, [...this.filePathParts, kWildcard].join(kPathSeparator)];\n  }\n}\n\n/**\n * A multi-test test query, like `s:f:*` or `s:f:a,b,*`.\n *\n * Immutable (makes copies of constructor args).\n */\nexport class TestQueryMultiTest extends TestQueryMultiFile {\n  readonly level: TestQueryLevel = 2;\n  readonly isMultiFile: false = false;\n  readonly isMultiTest: boolean = true;\n  readonly testPathParts: readonly string[];\n\n  constructor(suite: string, file: readonly string[], test: readonly string[]) {\n    super(suite, file);\n    assert(file.length > 0, 'multi-test (or finer) query must have file-path');\n    this.testPathParts = [...test];\n  }\n\n  protected toStringHelper(): string[] {\n    return [\n      this.suite,\n      this.filePathParts.join(kPathSeparator),\n      [...this.testPathParts, kWildcard].join(kPathSeparator),\n    ];\n  }\n}\n\n/**\n * A multi-case test query, like `s:f:t:*` or `s:f:t:a,b,*`.\n *\n * Immutable (makes copies of constructor args), except for param values\n * (which aren't normally supposed to change; they're marked readonly in CaseParams).\n */\nexport class TestQueryMultiCase extends TestQueryMultiTest {\n  readonly level: TestQueryLevel = 3;\n  readonly isMultiTest: false = false;\n  readonly isMultiCase: boolean = true;\n  readonly params: CaseParams;\n\n  constructor(suite: string, file: readonly string[], test: readonly string[], params: CaseParams) {\n    super(suite, file, test);\n    assert(test.length > 0, 'multi-case (or finer) query must have test-path');\n    this.params = { ...params };\n  }\n\n  protected toStringHelper(): string[] {\n    const paramsParts = stringifyPublicParams(this.params);\n    return [\n      this.suite,\n      this.filePathParts.join(kPathSeparator),\n      this.testPathParts.join(kPathSeparator),\n      [...paramsParts, kWildcard].join(kParamSeparator),\n    ];\n  }\n}\n\n/**\n * A multi-case test query, like `s:f:t:` or `s:f:t:a=1,b=1`.\n *\n * Immutable (makes copies of constructor args).\n */\nexport class TestQuerySingleCase extends TestQueryMultiCase {\n  readonly level: TestQueryLevel = 4;\n  readonly isMultiCase: false = false;\n\n  protected toStringHelper(): string[] {\n    const paramsParts = stringifyPublicParams(this.params);\n    return [\n      this.suite,\n      this.filePathParts.join(kPathSeparator),\n      this.testPathParts.join(kPathSeparator),\n      paramsParts.join(kParamSeparator),\n    ];\n  }\n}\n"],"file":"query.js"}