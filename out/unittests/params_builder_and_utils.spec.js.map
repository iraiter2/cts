{"version":3,"sources":["../../src/unittests/params_builder_and_utils.spec.ts"],"names":["description","poptions","params","publicParamsEquals","makeTestGroup","UnitTest","ParamsTest","expectSpecEqual","act","exp","a","Array","from","expect","length","every","x","i","g","test","fn","t","hello","combine","p","q","y","filter","unless","exclude","expand","w","z","shouldThrow","undefined","_a"],"mappings":"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","sourcesContent":["export const description = `\nUnit tests for parameterization helpers.\n`;\n\nimport { poptions, params } from '../common/framework/params_builder.js';\nimport {\n  CaseParams,\n  CaseParamsIterable,\n  publicParamsEquals,\n} from '../common/framework/params_utils.js';\nimport { makeTestGroup } from '../common/framework/test_group.js';\n\nimport { UnitTest } from './unit_test.js';\n\nclass ParamsTest extends UnitTest {\n  expectSpecEqual(act: CaseParamsIterable, exp: CaseParams[]): void {\n    const a = Array.from(act);\n    this.expect(a.length === exp.length && a.every((x, i) => publicParamsEquals(x, exp[i])));\n  }\n}\n\nexport const g = makeTestGroup(ParamsTest);\n\ng.test('options').fn(t => {\n  t.expectSpecEqual(poptions('hello', [1, 2, 3]), [{ hello: 1 }, { hello: 2 }, { hello: 3 }]);\n});\n\ng.test('params').fn(t => {\n  t.expectSpecEqual(params(), [{}]);\n});\n\ng.test('combine,zeroes_and_ones').fn(t => {\n  t.expectSpecEqual(params().combine([]).combine([]), []);\n  t.expectSpecEqual(params().combine([]).combine([{}]), []);\n  t.expectSpecEqual(params().combine([{}]).combine([]), []);\n  t.expectSpecEqual(params().combine([{}]).combine([{}]), [{}]);\n});\n\ng.test('combine,mixed').fn(t => {\n  t.expectSpecEqual(\n    params()\n      .combine(poptions('x', [1, 2]))\n      .combine(poptions('y', ['a', 'b']))\n      .combine([{ p: 4 }, { q: 5 }])\n      .combine([{}]),\n    [\n      { x: 1, y: 'a', p: 4 },\n      { x: 1, y: 'a', q: 5 },\n      { x: 1, y: 'b', p: 4 },\n      { x: 1, y: 'b', q: 5 },\n      { x: 2, y: 'a', p: 4 },\n      { x: 2, y: 'a', q: 5 },\n      { x: 2, y: 'b', p: 4 },\n      { x: 2, y: 'b', q: 5 },\n    ]\n  );\n});\n\ng.test('filter').fn(t => {\n  t.expectSpecEqual(\n    params()\n      .combine([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .filter(p => p.a),\n    [{ a: true, x: 1 }]\n  );\n});\n\ng.test('unless').fn(t => {\n  t.expectSpecEqual(\n    params()\n      .combine([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .unless(p => p.a),\n    [{ a: false, y: 2 }]\n  );\n});\n\ng.test('exclude').fn(t => {\n  t.expectSpecEqual(\n    params()\n      .combine([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .exclude([{ a: true }, { a: false, y: 2 }]),\n    [{ a: true, x: 1 }]\n  );\n});\n\ng.test('expand').fn(t => {\n  t.expectSpecEqual(\n    params()\n      .combine([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .expand(function* (p) {\n        if (p.a) {\n          yield* poptions('z', [3, 4]);\n        } else {\n          yield { w: 5 };\n        }\n      }),\n    [\n      { a: true, x: 1, z: 3 },\n      { a: true, x: 1, z: 4 },\n      { a: false, y: 2, w: 5 },\n    ]\n  );\n});\n\ng.test('expand,invalid').fn(t => {\n  const p = params()\n    .combine([{ x: 1 }])\n    .expand(function* (p) {\n      yield p; // causes key 'x' to be duplicated\n    });\n  t.shouldThrow('Error', () => {\n    Array.from(p);\n  });\n});\n\ng.test('undefined').fn(t => {\n  t.expect(!publicParamsEquals({ a: undefined }, {}));\n  t.expect(!publicParamsEquals({}, { a: undefined }));\n});\n\ng.test('private').fn(t => {\n  t.expect(publicParamsEquals({ _a: 0 }, {}));\n  t.expect(publicParamsEquals({}, { _a: 0 }));\n});\n\ng.test('arrays').fn(t => {\n  t.expectSpecEqual([{ a: [1, 2] }], [{ a: [1, 2] }]);\n});\n"],"file":"params_builder_and_utils.spec.js"}